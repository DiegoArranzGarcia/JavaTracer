<map>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler.&lt;init&gt;(java.lang.ClassLoader)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler.&lt;init&gt;(java.lang.ClassLoader)</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandlerFactory.&lt;init&gt;(java.lang.ClassLoader)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandlerFactory</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandlerFactory.&lt;init&gt;(java.lang.ClassLoader)</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandlerFactory.createURLStreamHandler(java.lang.String)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandlerFactory</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandlerFactory.createURLStreamHandler(java.lang.String)</method>
      <numCalls>2</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler.openConnection(java.net.URL)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler.openConnection(java.net.URL)</method>
      <numCalls>3</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.RsrcURLConnection.&lt;init&gt;(java.net.URL, java.lang.ClassLoader)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.RsrcURLConnection</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.RsrcURLConnection.&lt;init&gt;(java.net.URL, java.lang.ClassLoader)</method>
      <numCalls>3</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo.&lt;init&gt;(org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo.&lt;init&gt;(org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo)</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.splitSpaces(java.lang.String)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.splitSpaces(java.lang.String)</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.getManifestInfo()</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.getManifestInfo()</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler.parseURL(java.net.URL, java.lang.String, int, int)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler.parseURL(java.net.URL, java.lang.String, int, int)</method>
      <numCalls>3</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>Person.&lt;init&gt;(int, java.lang.String, java.lang.String)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>Person</className>
      <method>Person.&lt;init&gt;(int, java.lang.String, java.lang.String)</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>Person.&lt;init&gt;(int, java.lang.String, java.lang.String, Person)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>Person</className>
      <method>Person.&lt;init&gt;(int, java.lang.String, java.lang.String, Person)</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>Main.main(java.lang.String[])</string>
    <com.profiler.model.MethodDataProfiler>
      <className>Main</className>
      <method>Main.main(java.lang.String[])</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>Person.imprime()</string>
    <com.profiler.model.MethodDataProfiler>
      <className>Person</className>
      <method>Person.imprime()</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>Main.prueba(int, Person, Person)</string>
    <com.profiler.model.MethodDataProfiler>
      <className>Main</className>
      <method>Main.prueba(int, Person, Person)</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.RsrcURLConnection.getInputStream()</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.RsrcURLConnection</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.RsrcURLConnection.getInputStream()</method>
      <numCalls>4</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(java.lang.String[])</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(java.lang.String[])</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
  <entry>
    <string>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo.&lt;init&gt;()</string>
    <com.profiler.model.MethodDataProfiler>
      <className>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo</className>
      <method>org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo.&lt;init&gt;()</method>
      <numCalls>1</numCalls>
    </com.profiler.model.MethodDataProfiler>
  </entry>
</map>